trigger:
  batch: true
  branches:
    include:
      - "*"

pr: none

workspace:
    clean: all

variables:
  buildConfiguration: 'release'

pool:
  name: 'DAS - Continuous Integration'
  demands: Agent.OS -equals Linux

steps:
- task: gittools.gitversion-preview.gitversion-task.GitVersion@5
  displayName: GitVersion
  inputs:
    updateAssemblyInfo: true

- task: DotNetCoreCLI@2
  displayName: dotnet restore
  inputs:
    command: restore
    projects: 'src/**/*.csproj'
    noCache: true

- task: DotNetCoreCLI@2
  displayName: dotnet build
  inputs:
    projects: 'src/**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --no-restore'
    
- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    projects: 'src/**/*.csproj'
    packDirectory: '$(build.artifactstagingdirectory)/publish'
    arguments: '--configuration $(buildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: publish
    publishWebProjects: false
    zipAfterPublish: false
    projects: 'src/**/*Tests.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/tests --no-restore --no-build'

- task: CopyFiles@2
  displayName: 'Copy Check-TestResults.ps1 to: $(build.artifactstagingdirectory)'
  inputs:
    Contents: |     
     src/**/Check-TestResults.ps1
    TargetFolder: '$(build.artifactstagingdirectory)/publish'
    OverWrite: true

- task: CopyFiles@2
  displayName: 'Copy UpdateNoofTestWorkers.ps1 to: $(build.artifactstagingdirectory)'
  inputs:
    Contents: |     
     src/**/UpdateNoofTestWorkers.ps1
    TargetFolder: '$(build.artifactstagingdirectory)/publish'
    OverWrite: true
    
- task: CopyFiles@2
  displayName: 'Copy runsettings to: $(build.artifactstagingdirectory)'
  inputs:
    Contents: |     
      src/**/*.runsettings
    TargetFolder: '$(build.artifactstagingdirectory)/publish/runsettings'
    OverWrite: true
    
- task: CopyFiles@2
  displayName: 'Copy chromedriver to: $(build.artifactstagingdirectory)'
  inputs:
    Contents: |     
      src/**/chromedriver.exe
    TargetFolder: '$(build.artifactstagingdirectory)/publish'
    OverWrite: true

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(build.artifactstagingdirectory)/tests'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(build.artifactstagingdirectory)/publish/tests.zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    pathtoPublish: '$(build.artifactstagingdirectory)/publish'
